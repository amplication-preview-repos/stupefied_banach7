/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Guild as PrismaGuild } from "@prisma/client";

export class GuildServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.GuildCountArgs, "select">): Promise<number> {
    return this.prisma.guild.count(args);
  }

  async guilds(args: Prisma.GuildFindManyArgs): Promise<PrismaGuild[]> {
    return this.prisma.guild.findMany(args);
  }
  async guild(args: Prisma.GuildFindUniqueArgs): Promise<PrismaGuild | null> {
    return this.prisma.guild.findUnique(args);
  }
  async createGuild(args: Prisma.GuildCreateArgs): Promise<PrismaGuild> {
    return this.prisma.guild.create(args);
  }
  async updateGuild(args: Prisma.GuildUpdateArgs): Promise<PrismaGuild> {
    return this.prisma.guild.update(args);
  }
  async deleteGuild(args: Prisma.GuildDeleteArgs): Promise<PrismaGuild> {
    return this.prisma.guild.delete(args);
  }
}
